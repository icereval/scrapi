USE sarlacc;
  
DROP TABLE doc_to_versions;
DROP TABLE contributor_to_docs;
DROP TABLE documents;
DROP TABLE publisher_to_docs;
DROP TABLE harvester_log;
DROP TABLE pub_venue_to_pub_dates;

CREATE TABLE doc_to_versions (
  source text,
  doc_id text,
  
  version timeuuid,
  pub_date text,
  short_harvested_date text,
  
  raw_doc_record blob,
  
  PRIMARY KEY ((source, doc_id), version)
  )
WITH CLUSTERING ORDER BY (version ASC);


CREATE TABLE contributor_to_docs (
  contributor_familyName text,
  contributor_givenName text,
  contributor_additionalName text,
  
  source text,
  doc_id text,
  short_harvested_date text,
  pub_date text,
    
  PRIMARY KEY ((contributor_familyName, contributor_givenName, contributor_additionalName), source, doc_id)
  )
WITH CLUSTERING ORDER BY (source ASC);


CREATE TABLE pub_venue_to_pub_dates (
  pub_venue_id text,
  pub_date text,  

  PRIMARY KEY (pub_venue_id, pub_date)
  )
WITH CLUSTERING ORDER BY (pub_date ASC);


CREATE TABLE pub_venue_to_docs (
  pub_venue_id text,
  pub_date text,  
  
  source text,
  short_harvested_date text, -- iso-format
  
  doc_id text,
  
  PRIMARY KEY ((pub_venue_id, pub_date), source, doc_id)
  )
WITH CLUSTERING ORDER BY (source ASC);


CREATE TABLE documents (
  source text,
  short_harvested_date text, -- iso-format
  
  doc_id text,
  version timeuuid, -- generated by and internal to COS
  pub_date text,
  pub_venue_id text,
  
  title text,
  
  nContributors int, -- is i \in [0..n] and each key in map is prefixed with "i_" string. This is a hack to flatten the list.
  contributors map<text,text>,
  
  citations map<text, text>
  
  publisher map<text,text>,
  
  abstract text, -- description
  tags set<text>,
  
  uris map<text,text>,
  
  freeToRead boolean,
  languages set<text>,
  licenses set<text>,
  subjects set<text>,
  sponsorships set<text>,
  
  harvested_date text, -- referred to as providerUpdatedDateTime
  
  raw_doc_record blob,
  file_type text,
  
  source_additional_meta_data text, -- sometimes referred to as other properties.
  source_additional_meta_data_type text, -- i.e. json
  
  PRIMARY KEY ((source, short_harvested_date), doc_id, version)
  )
WITH CLUSTERING ORDER BY (doc_id ASC);


-- This is where the harvester log goes
CREATE TABLE harvester_log (
  source text,
  short_harvested_date text, -- iso-format
  
  doc_id text,
  version timeuuid,
  
  entry map<text, timestamp>,
  
  PRIMARY KEY ((source, short_harvested_date), doc_id, version)
)
WITH CLUSTERING ORDER BY (source ASC);
